\section{Perturbation experiments}

<<setup, include=FALSE>>=
library(circlize)
library(RColorBrewer)
library(dplyr)
b = import('base')
io = import('io')
ar = import('array')
st = import('stats')

file2assocs = function(fname) {
    # load data
    data = io$load(fname)
    index = data$index
    scores = data$scores
    sign = ifelse(index$effect == "activating", 1, -1)
    pathway = sign * ar$mask(index$pathway) + 0

    # compute associations
    st$lm(scores ~ pathway)
}

reactome = file2assocs("../scores/speed/gsea_reactome.RData") %>%
    filter(p.value < 1e-4) %>%
    transmute(from=pathway, to=scores, value=-log10(p.value))
speed = file2assocs("../scores/speed/speed_matrix.RData") %>%
    filter(p.value < 1e-4) %>%
    transmute(from=pathway, to=scores, value=-log10(p.value))

all_pathways = unique(c(speed$from, speed$to, reactome$from, reactome$to))
color = setNames(c(brewer.pal(12, "Paired"), "#fefefe"), all_pathways)
@


\subsection{Signaling Footprints (perturbation experiments)}

<<circle1, echo=FALSE>>=
chordDiagram(speed, grid.col=color, grid.border="#dedede", self.link=1, link.border="#dedede")
@

\subsection{Reactome}

<<circle2, echo=FALSE>>=
chordDiagram(reactome, grid.col=color, grid.border="#dedede", self.link=1, link.border="#dedede")
@
